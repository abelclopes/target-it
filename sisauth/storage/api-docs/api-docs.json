{
    "openapi": "3.0.0",
    "info": {
        "title": "Your Application API document",
        "version": "1.0.0"
    },
    "paths": {
        "/api/addresses/{id}/details": {
            "get": {
                "tags": [
                    "Addresses"
                ],
                "summary": "Get details of an address",
                "description": "Returns details of a specific address",
                "operationId": "showAddressDetails",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Address"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Address not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/addresses/{uid}/user-details": {
            "get": {
                "tags": [
                    "Addresses"
                ],
                "summary": "Get addresses of a user",
                "description": "Returns addresses of a specific user",
                "operationId": "showUserAddresses",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Address"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/addresses/{uid}/new": {
            "post": {
                "tags": [
                    "Addresses"
                ],
                "summary": "Create a new address",
                "description": "Creates a new address associated with the specified user",
                "operationId": "storeAddress",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Address"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Address created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Address"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid data provided"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/addresses/{id}/update": {
            "put": {
                "tags": [
                    "Addresses"
                ],
                "summary": "Update an existing address",
                "description": "Updates an existing address with the provided details",
                "operationId": "updateAddress",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the address to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Data to update the address",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "logradouro": {
                                        "description": "Street name",
                                        "type": "string"
                                    },
                                    "numero": {
                                        "description": "House number",
                                        "type": "string"
                                    },
                                    "bairro": {
                                        "description": "Neighborhood",
                                        "type": "string"
                                    },
                                    "complemento": {
                                        "description": "Address complement",
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "cep": {
                                        "description": "Postal code",
                                        "type": "string"
                                    },
                                    "user_id": {
                                        "description": "Associated user ID",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Address updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Address"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Address not found"
                    },
                    "422": {
                        "description": "Invalid data provided"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/addresses/{id}/delete": {
            "delete": {
                "tags": [
                    "Addresses"
                ],
                "summary": "Delete an existing address",
                "description": "Deletes an existing address by ID",
                "operationId": "deleteAddress",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the address to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Address deleted successfully"
                    },
                    "404": {
                        "description": "Address not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login",
                "description": "Login",
                "operationId": "dd51a484b7fa0f97c7680fdbde14cf5f",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/auth/refresh": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh Token",
                "description": "Endpoint para atualizar o token JWT.",
                "operationId": "authRefresh",
                "responses": {
                    "200": {
                        "description": "Token JWT atualizado com sucesso",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "bearer"
                                        },
                                        "expires_in": {
                                            "type": "integer",
                                            "example": "3600"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Token expirado ou inválido",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/profile": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Authenticated User Profile",
                "description": "User Profile",
                "operationId": "18b2d1b72b1e2987c1eece1cf7318b47",
                "responses": {
                    "200": {
                        "description": "Authenticated User Profile"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/change-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Change user's password",
                "description": "Change the password of the authenticated user.",
                "operationId": "changePassword",
                "requestBody": {
                    "description": "Password change request data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "old_password",
                                    "new_password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@exemple.com"
                                    },
                                    "old_password": {
                                        "description": "Current password",
                                        "type": "string",
                                        "format": "password",
                                        "example": "oldPassword123"
                                    },
                                    "new_password": {
                                        "description": "New password",
                                        "type": "string",
                                        "format": "password",
                                        "example": "newPassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password changed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password changed successfully"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The email provided does not match the email of the authenticated user."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/{user}/assign-role": {
            "post": {
                "tags": [
                    "Roles"
                ],
                "summary": "Assign roles to a user",
                "description": "Assign roles to a user by user ID.",
                "operationId": "0d531783b8aa0ed023af38271d92e6bb",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "roles"
                                ],
                                "properties": {
                                    "roles": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Roles assigned successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/{user}/revoke-role": {
            "post": {
                "tags": [
                    "Roles"
                ],
                "summary": "Revoke roles from a user",
                "description": "Revoke roles from a user by user ID.",
                "operationId": "3a0dace5ef3cf255216d7973674f2b68",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "roles"
                                ],
                                "properties": {
                                    "roles": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Roles revoked successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/{user_id}/roles": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "Get roles of a user",
                "description": "Get roles of a user by user ID.",
                "operationId": "1ebf27ad893933d1683c4cff192722ac",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Roles retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "roles": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Role"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/roles": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "Get all roles",
                "description": "Get all available roles.",
                "operationId": "1f3a725ee1eb8b6dbf2437851e1bb2a1",
                "responses": {
                    "200": {
                        "description": "Roles retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "roles": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Role"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Display a listing of users",
                "description": "Returns a list of users",
                "operationId": "indexUsers",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create a new user",
                "description": "Creates a new user with the provided details",
                "operationId": "storeUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "secret"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "1234567890"
                                    },
                                    "cpf": {
                                        "type": "string",
                                        "example": "123.456.789-01"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid data provided"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Display the specified user",
                "description": "Returns the user details",
                "operationId": "getUserById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update an existing user",
                "description": "Updates an existing user with the provided details",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "422": {
                        "description": "Invalid data provided"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete a user",
                "description": "Deletes a user based on ID",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "User deleted successfully"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Address": {
                "title": "Address",
                "description": "Address model",
                "properties": {
                    "id": {
                        "description": "Address ID",
                        "type": "integer",
                        "example": 1
                    },
                    "logradouro": {
                        "description": "Street name",
                        "type": "string",
                        "example": "123 Main Street"
                    },
                    "numero": {
                        "description": "House number",
                        "type": "string",
                        "example": "101"
                    },
                    "bairro": {
                        "description": "Neighborhood",
                        "type": "string",
                        "example": "Downtown"
                    },
                    "complemento": {
                        "description": "Address complement",
                        "type": "string",
                        "example": "Apartment 5A"
                    },
                    "cep": {
                        "description": "Postal code",
                        "type": "string",
                        "example": "12345-678"
                    },
                    "user_id": {
                        "description": "Associated user ID",
                        "type": "integer",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "Role": {
                "title": "Role",
                "description": "Role object",
                "properties": {
                    "id": {
                        "description": "ID of the role",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "description": "Name of the role",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "description": "User model",
                "properties": {
                    "id": {
                        "description": "User ID",
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "description": "Name of the User",
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "description": "Email address of the User",
                        "type": "string",
                        "example": "john.doe@example.com"
                    },
                    "phone": {
                        "description": "Phone number of the User",
                        "type": "string",
                        "example": "1234567890"
                    },
                    "cpf": {
                        "description": "CPF (Cadastro de Pessoas Físicas) of the User",
                        "type": "string",
                        "example": "123.456.789-01"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "name": "bearerAuth",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    }
}